{"version":3,"sources":["Book.js","BooksAPI.js","SearchPage.js","Shelf.js","MainPage.js","App.js","index.js"],"names":["Book","Component","render","authorsList","this","props","book","authors","author","push","className","style","width","height","backgroundImage","imageLinks","thumbnail","onChange","event","moveShelf","target","value","currentShelf","disabled","title","map","key","api","token","localStorage","Math","random","toString","substr","headers","getAll","fetch","then","res","json","data","books","SearchPage","state","query","shownBooks","updateQuery","setState","updateShownBooks","method","body","JSON","stringify","BooksAPI","error","to","e","type","placeholder","shelf","original_book","id","Shelf","filter","MainPage","BooksApp","React","componentDidMount","path","exact","ReactDOM","basename","process","document","getElementById"],"mappings":"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","file":"static/js/main.50de39f2.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\n\r\nclass Book extends Component {\r\n\r\n    render() {\r\n        const authorsList = [];\r\n        if (this.props.book.authors) {\r\n            for (const author of this.props.book.authors) {\r\n                authorsList.push(author)\r\n            }\r\n        }\r\n\r\n        return (\r\n            <div className=\"book\">\r\n                <div className=\"book-top\">\r\n                    <div className=\"book-cover\" style={{\r\n                        width: 128, height: 193,\r\n                        backgroundImage: `url('${this.props.book.imageLinks && this.props.book.imageLinks.thumbnail}')`\r\n                    }}></div>\r\n                    <div className=\"book-shelf-changer\">\r\n                        <select\r\n                            onChange={(event) => (\r\n                                this.props.moveShelf(this.props.book, event.target.value)\r\n                            )}\r\n                            value={this.props.currentShelf}\r\n                        >\r\n                            <option value=\"move\" disabled>Move to...</option>\r\n                            <option value=\"currentlyReading\">Currently Reading</option>\r\n                            <option value=\"wantToRead\">Want to Read</option>\r\n                            <option value=\"read\">Read</option>\r\n                            <option value=\"none\">None</option>\r\n                        </select>\r\n                    </div>\r\n                </div>\r\n                <div className=\"book-title\">{this.props.book.title}</div>\r\n                <div className=\"book-authors\">{\r\n                    authorsList.map(author => (\r\n                        <div key={author}>{author}</div>\r\n                    ))}</div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Book;","\r\nconst api = \"https://reactnd-books-api.udacity.com\"\r\n\r\n\r\n// Generate a unique token for storing your bookshelf data on the backend server.\r\nlet token = localStorage.token\r\nif (!token)\r\n  token = localStorage.token = Math.random().toString(36).substr(-8)\r\n\r\nconst headers = {\r\n  'Accept': 'application/json',\r\n  'Authorization': token\r\n}\r\n\r\nexport const get = (bookId) =>\r\n  fetch(`${api}/books/${bookId}`, { headers })\r\n    .then(res => res.json())\r\n    .then(data => data.book)\r\n\r\nexport const getAll = () =>\r\n  fetch(`${api}/books`, { headers })\r\n    .then(res => res.json())\r\n    .then(data => data.books)\r\n\r\nexport const update = (book, shelf) =>\r\n  fetch(`${api}/books/${book.id}`, {\r\n    method: 'PUT',\r\n    headers: {\r\n      ...headers,\r\n      'Content-Type': 'application/json'\r\n    },\r\n    body: JSON.stringify({ shelf })\r\n  }).then(res => res.json())\r\n\r\nexport const search = (query) =>\r\n  fetch(`${api}/search`, {\r\n    method: 'POST',\r\n    headers: {\r\n      ...headers,\r\n      'Content-Type': 'application/json'\r\n    },\r\n    body: JSON.stringify({ query })\r\n  }).then(res => res.json())\r\n    .then(data => data.books)\r\n","import React, { Component } from 'react';\r\nimport Book from './Book';\r\nimport * as BooksAPI from './BooksAPI'\r\nimport { Link } from 'react-router-dom';\r\n\r\nclass SearchPage extends Component {\r\n    state = {\r\n        query: '',\r\n        shownBooks: []\r\n    }\r\n\r\n    updateQuery = (query) => {\r\n        this.setState({\r\n            query: query,\r\n        })\r\n        this.updateShownBooks(query);\r\n    }\r\n\r\n    updateShownBooks = (query) => {\r\n        if (query) {\r\n            BooksAPI.search(query).then((shownBooks) => {\r\n                if (shownBooks.error) {\r\n                    this.setState({ shownBooks: [] })\r\n                } else {\r\n                    this.setState({ shownBooks })\r\n                }\r\n            })\r\n        } else {\r\n            this.setState({ shownBooks: [] })\r\n        }\r\n    }\r\n    render() {\r\n\r\n        return (\r\n            <div className=\"search-books\">\r\n                <div className=\"search-books-bar\">\r\n                    <Link to=\"/\" className=\"close-search\">Close</Link>\r\n                    <div className=\"search-books-input-wrapper\">\r\n\r\n                        <input\r\n                            value={this.state.query}\r\n                            onChange={(e) => this.updateQuery(e.target.value)}\r\n                            type=\"text\" placeholder=\"Search by title or author\" />\r\n                    </div>\r\n                </div>\r\n                <div className=\"search-books-results\">\r\n                    <ol className=\"books-grid\">\r\n                        {\r\n                            this.state.shownBooks && this.state.shownBooks.map(\r\n                                (book) => {\r\n                                    let shelf = \"none\";\r\n                                    for (let original_book of this.props.books) {\r\n                                        if (book.id === original_book.id) {\r\n                                            shelf = original_book.shelf;\r\n                                        }\r\n                                    }\r\n                                    return (\r\n                                        <Book key={book.id} book={book} currentShelf={shelf} moveShelf={this.props.moveShelf} />\r\n                                    )\r\n                                }\r\n                            )\r\n                        }\r\n                    </ol>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default SearchPage;","import React, { Component } from 'react';\r\nimport Book from './Book';\r\n\r\nclass Shelf extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"bookshelf\">\r\n                <h2 className=\"bookshelf-title\">{this.props.title}</h2>\r\n                <div className=\"bookshelf-books\">\r\n                    <ol className=\"books-grid\">\r\n                        {this.props.books.filter((book) => (book.shelf === this.props.value)).map((book) => (\r\n                            <li key={book.id}>\r\n                                <Book book={book} moveShelf={this.props.moveShelf} currentShelf={this.props.value} />\r\n                            </li>\r\n                        ))}\r\n\r\n                    </ol>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default Shelf","import React, { Component } from 'react';\r\nimport Shelf from './Shelf';\r\nimport { Link } from 'react-router-dom';\r\n\r\n// MainPage is having the list of books and needed methods to edit that list as passed from App.\r\nclass MainPage extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"list-books\">\r\n                <div className=\"list-books-title\">\r\n                    <h1>MyReads</h1>\r\n                </div>\r\n                <div className=\"list-books-content\">\r\n                    <Shelf value='currentlyReading' title='Currently Reading' books={this.props.books} moveShelf={this.props.moveShelf} />\r\n                    <Shelf value='wantToRead' title='Want to Read' books={this.props.books} moveShelf={this.props.moveShelf} />\r\n                    <Shelf value='read' title='Read' books={this.props.books} moveShelf={this.props.moveShelf} />\r\n                </div>\r\n                <div className=\"open-search\">\r\n                    <Link to=\"/search\">Add a book</Link>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default MainPage;","import React from 'react';\r\nimport SearchPage from './SearchPage';\r\nimport MainPage from './MainPage';\r\nimport * as BooksAPI from './BooksAPI'\r\nimport { Route } from 'react-router-dom';\r\nimport './App.css'\r\n\r\n// App would host the list of books in its state and pass it to the MainPage and SearchPage.\r\n// So, App would also host the methods that edit that state like moveShelf.\r\nclass BooksApp extends React.Component {\r\n  state = {\r\n    books: []\r\n  }\r\n\r\n  moveShelf = (book, shelf) => {\r\n    // This function is defined using fat arrow notation to avoid binding the \"this\" keyword.\r\n    BooksAPI.update(book, shelf)\r\n\r\n      .then(BooksAPI.getAll)\r\n      .then((books) => {\r\n        this.setState({ books }) // means {books:books}\r\n      })\r\n\r\n  }\r\n\r\n  componentDidMount() {\r\n    BooksAPI.getAll().then((books) => {\r\n      this.setState({ books }) // means {books:books}\r\n    })\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"app\">\r\n        <Route path='/' exact render={() => (\r\n          <MainPage books={this.state.books} moveShelf={this.moveShelf} />\r\n        )} />\r\n        <Route path='/search' render={() => (\r\n          <SearchPage books={this.state.books} moveShelf={this.moveShelf} />\r\n        )} />\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default BooksApp\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport App from './App'\r\nimport './index.css'\r\nimport { BrowserRouter } from 'react-router-dom';\r\nReactDOM.render(<BrowserRouter basename={process.env.PUBLIC_URL}><App /></BrowserRouter>, document.getElementById('root'))\r\n"],"sourceRoot":""}